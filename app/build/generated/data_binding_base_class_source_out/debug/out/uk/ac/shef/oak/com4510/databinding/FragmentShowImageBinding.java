// Generated by data binding compiler. Do not edit!
package uk.ac.shef.oak.com4510.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.google.android.gms.maps.MapView;
import com.google.android.material.appbar.AppBarLayout;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import java.lang.Deprecated;
import java.lang.Object;
import uk.ac.shef.oak.com4510.R;

public abstract class FragmentShowImageBinding extends ViewDataBinding {
  @NonNull
  public final FloatingActionButton fabEdit;

  @NonNull
  public final AppBarLayout showAppBarLayout;

  @NonNull
  public final Button showDescriptionButton;

  @NonNull
  public final ImageView showImage;

  @NonNull
  public final ConstraintLayout showImageConstraint;

  @NonNull
  public final TextView showImageDescription;

  @NonNull
  public final MapView showMap;

  @NonNull
  public final Button showMapButton;

  @NonNull
  public final TextView showSensors;

  @NonNull
  public final Button showSensorsButton;

  @NonNull
  public final Toolbar showToolbar;

  protected FragmentShowImageBinding(Object _bindingComponent, View _root, int _localFieldCount,
      FloatingActionButton fabEdit, AppBarLayout showAppBarLayout, Button showDescriptionButton,
      ImageView showImage, ConstraintLayout showImageConstraint, TextView showImageDescription,
      MapView showMap, Button showMapButton, TextView showSensors, Button showSensorsButton,
      Toolbar showToolbar) {
    super(_bindingComponent, _root, _localFieldCount);
    this.fabEdit = fabEdit;
    this.showAppBarLayout = showAppBarLayout;
    this.showDescriptionButton = showDescriptionButton;
    this.showImage = showImage;
    this.showImageConstraint = showImageConstraint;
    this.showImageDescription = showImageDescription;
    this.showMap = showMap;
    this.showMapButton = showMapButton;
    this.showSensors = showSensors;
    this.showSensorsButton = showSensorsButton;
    this.showToolbar = showToolbar;
  }

  @NonNull
  public static FragmentShowImageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_show_image, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static FragmentShowImageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup root, boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<FragmentShowImageBinding>inflateInternal(inflater, R.layout.fragment_show_image, root, attachToRoot, component);
  }

  @NonNull
  public static FragmentShowImageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.fragment_show_image, null, false, component)
   */
  @NonNull
  @Deprecated
  public static FragmentShowImageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<FragmentShowImageBinding>inflateInternal(inflater, R.layout.fragment_show_image, null, false, component);
  }

  public static FragmentShowImageBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static FragmentShowImageBinding bind(@NonNull View view, @Nullable Object component) {
    return (FragmentShowImageBinding)bind(component, view, R.layout.fragment_show_image);
  }
}
